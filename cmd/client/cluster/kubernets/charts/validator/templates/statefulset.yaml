apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "validator.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "validator.name" . }}
    helm.sh/chart: {{ include "validator.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: {{ include "validator.name" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
        nameprefix: {{ .Values.nameprefix}}
    spec:
      initContainers:
      - name: init-genesis
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh","-c"]
        args:
        - |
          rendez init --runtime="{{ .Values.rendez.runtime }}" --log_path="{{ .Values.rendez.logs }}/rendez.log" --app="evm" --chainid=9102
          rm -rf {{ .Values.rendez.runtime }}/genesis.json
        volumeMounts:
        - mountPath: "{{ .Values.rendez.runtime }}"
          name: runtime
        - mountPath: "{{ .Values.rendez.logs }}"
          name: logs
      - name: copy-files
        image: library/busybox
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh","-c"]
        args:
          - |
            cp /init_rendez/genesis.json {{ .Values.rendez.runtime }}
        volumeMounts:
        - mountPath: /init_rendez
          name: genesis
        - mountPath: "{{ .Values.rendez.runtime }}"
          name: runtime
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh","-c"]
        args:
        - |
            echo 'app_name = "evm"
            auth_by_ca = false
            block_size = 5000
            db_backend = "leveldb"
            db_conn_str = "sqlite3"
            db_type = "sqlite3"
            environment = "production"
            fast_sync = true
            log_path = ""
            moniker = "anonymous"
            non_validator_auth_by_ca = false
            non_validator_node_auth = false
            p2p_laddr = "tcp://0.0.0.0:{{ .Values.rendez.peer }}"
            rpc_laddr = "tcp://0.0.0.0:{{ .Values.rendez.rpc }}"
            signbyca = ""
            seeds = "{{ .Values.rendez.seeds }}"
            skip_upnp = true
            threshold_blocks = 0
            tracerouter_msg_ttl = 5
            network_rate_limit = 1024' > /rendez/config.toml
            echo '{{ .Values.rendez.privValidator }}'> /rendez/priv_validator.json
            rendez run --runtime="{{ .Values.rendez.runtime}}"
        ports:
        - name: peer
          containerPort: {{ .Values.rendez.peer }}
          protocol: TCP
        - name: rpc
          containerPort: {{ .Values.rendez.rpc }}
          protocol: TCP
        volumeMounts:
        - mountPath: "{{ .Values.rendez.runtime}}"
          name: runtime
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}
      volumes:
      - name: genesis
        configMap:
          name: genesis-block
      - name: runtime
        emptyDir: {}
      - name: logs
        emptyDir: {}
